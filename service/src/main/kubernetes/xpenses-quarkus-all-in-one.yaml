apiVersion: v1
kind: Pod
metadata:
  labels:
    run: kafka-producer
  name: kafka-producer
  namespace: kafka
spec:
  containers:
    - args:
        - bin/kafka-console-producer.sh
        - --broker-list
        - my-cluster-kafka-bootstrap:9092
        - --topic
        - my-topic
      image: quay.io/strimzi/kafka:0.24.0-kafka-2.8.0
      name: kafka-producer
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-l7kdg
          readOnly: true
  restartPolicy: Never
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-l7kdg
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: xpenses-quarkus-deploy
  name: xpenses-quarkus-deploy
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xpenses-quarkus-deploy
  template:
    metadata:
      labels:
        app: xpenses-quarkus-deploy
    spec:
      containers:
        - image: xpenses-quarkus
          name: xpenses-quarkus
          imagePullPolicy: Never
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: xpenses-quarkus-deploy
  name: xpenses-quarkus-deploy
  namespace: kafka
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: xpenses-quarkus-deploy
  type: NodePort